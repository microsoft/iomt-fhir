//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Health.Events.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EventResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EventResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Health.Events.Resources.EventResources", typeof(EventResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConsumerGroup.
        /// </summary>
        internal static string ConsumerGroup {
            get {
                return ResourceManager.GetString("ConsumerGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the provided Event Hub&apos;s &apos;Azure Event Hubs Data Receiver&apos; role has been assigned to the applicable Azure Active Directory security principal or managed identity..
        /// </summary>
        internal static string EventHubAuthorizationError {
            get {
                return ResourceManager.GetString("EventHubAuthorizationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the provided Event Hubs Namespace exists..
        /// </summary>
        internal static string EventHubHostNotFound {
            get {
                return ResourceManager.GetString("EventHubHostNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the provided Event Hub contains the provided consumer group..
        /// </summary>
        internal static string EventHubInvalidConsumerGroup {
            get {
                return ResourceManager.GetString("EventHubInvalidConsumerGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the provided Event Hubs Namespace contains the provided Event Hub and that the provided Event Hub contains the provided consumer group..
        /// </summary>
        internal static string EventHubResourceNotFound {
            get {
                return ResourceManager.GetString("EventHubResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the provided Event Hub Namespace, Event Hub name, and consumer group are correct and that access permissions to the provided Event Hub have been granted..
        /// </summary>
        internal static string EventHubServiceCommunicationProblem {
            get {
                return ResourceManager.GetString("EventHubServiceCommunicationProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that the service principal used for the managed identity authentication exists..
        /// </summary>
        internal static string ManagedIdentityAuthenticationError {
            get {
                return ResourceManager.GetString("ManagedIdentityAuthenticationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify that when using the &apos;Custom&apos; authentication type, the managed identity credential is present in the key vault..
        /// </summary>
        internal static string ManagedIdentityCredentialNotFound {
            get {
                return ResourceManager.GetString("ManagedIdentityCredentialNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecretNotFound.
        /// </summary>
        internal static string SecretNotFound {
            get {
                return ResourceManager.GetString("SecretNotFound", resourceCulture);
            }
        }
    }
}
